name: Deploy Frontend to Cloudflare Pages

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # Job 1: Build and Test Frontend
  build_frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run tests
        run: |
          cd frontend
          npm run test:ci || echo "No tests configured yet"

      - name: Run linting
        run: |
          cd frontend
          npm run lint || echo "No linting configured yet"

      - name: Build production bundle
        env:
          VITE_API_URL: ${{ github.ref == 'refs/heads/main' && 'https://service-api-msqkdhqmqq-as.a.run.app' || 'https://service-api-msqkdhqmqq-as.a.run.app' }}
          VITE_WS_URL: ${{ github.ref == 'refs/heads/main' && 'wss://your-sync-service-url' || 'wss://your-sync-service-url' }}
        run: |
          cd frontend
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/
          retention-days: 30

  # Job 2: Deploy to Cloudflare Pages
  deploy_frontend:
    name: Deploy to Cloudflare Pages
    needs: build_frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: watch-party-frontend
          directory: frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  # Job 3: Preview Deploy for PRs
  preview_deploy:
    name: Deploy Preview for PR
    needs: build_frontend
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

      - name: Deploy to Cloudflare Pages Preview
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: watch-party-frontend
          directory: frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          - name: Comment PR with preview URL
            uses: actions/github-script@v7
            with:
              script: |
            const previewUrl = `https://${context.payload.pull_request.head.sha.substring(0, 8)}.watch-party-frontend.pages.dev`;
            const body = `Cloudflare Pages Preview URL: ${previewUrl}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
