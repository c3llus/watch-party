---
- name: Rollback to Previous Deployment
  hosts: websocket_servers
  become: yes
  
  tasks:
    - name: Get current deployment status
      slurp:
        src: /opt/watch-party/config/deployment-status.json
      register: deployment_status

    - name: Parse deployment status
      set_fact:
        current_deployment: "{{ deployment_status.content | b64decode | from_json }}"

    - name: Set rollback configuration
      set_fact:
        current_slot: "{{ current_deployment.active_slot }}"
        previous_slot: "{{ current_deployment.previous_slot }}"

    - name: Check if previous slot container exists
      docker_container_info:
        name: "watch-party-sync-{{ previous_slot }}"
      register: previous_container

    - name: Fail if no previous deployment available
      fail:
        msg: "No previous deployment available for rollback"
      when: not previous_container.exists

    - name: Start previous slot container
      docker_container:
        name: "watch-party-sync-{{ previous_slot }}"
        state: started
      when: previous_container.exists and not previous_container.container.State.Running

    - name: Wait for previous slot to be healthy
      uri:
        url: "http://localhost:{{ '8080' if previous_slot == 'blue' else '8081' }}/health"
        method: GET
        status_code: 200
      register: health_check
      until: health_check.status == 200
      retries: 30
      delay: 10

    - name: Switch traffic back to previous slot
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/watch-party
        backup: yes
      vars:
        primary_slot: "{{ previous_slot }}"
        primary_port: "{{ '8080' if previous_slot == 'blue' else '8081' }}"
        secondary_slot: "{{ current_slot }}"
        secondary_port: "{{ '8081' if previous_slot == 'blue' else '8080' }}"
      notify: reload nginx

    - name: Reload nginx
      systemd:
        name: nginx
        state: reloaded

    - name: Stop current (failed) deployment
      docker_container:
        name: "watch-party-sync-{{ current_slot }}"
        state: stopped

    - name: Update deployment status after rollback
      copy:
        content: |
          {
            "active_slot": "{{ previous_slot }}",
            "deployment_timestamp": "{{ ansible_date_time.epoch }}",
            "rollback": true,
            "previous_slot": "{{ current_slot }}"
          }
        dest: /opt/watch-party/config/deployment-status.json

  handlers:
    - name: reload nginx
      systemd:
        name: nginx
        state: reloaded
